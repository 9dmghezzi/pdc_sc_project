
/**
 * Dylan Ghezzi 19078169
 * 27/10/2022
 * player sign up panel
 * PDC Project 2
 */
import java.awt.CardLayout;
import javax.swing.JOptionPane;

public class PlayerSignUpPanel extends javax.swing.JPanel {

    PlayerSignUp signUp;

    /**
     * Creates new form playerSignUpPanel
     */
    public PlayerSignUpPanel() {
        initComponents();
        signUp = new PlayerSignUp();
        if (signUp.players == null) { // if players are not successfully retrieved
            JOptionPane.showMessageDialog(this, "Failed to retrieve players from player_log.txt", "File Reading Error", JOptionPane.ERROR_MESSAGE);
            System.exit(0); // exit program
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        displayButton = new javax.swing.JButton();
        signUpButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        returnButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();

        displayButton.setText("Display Players");
        displayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayButtonActionPerformed(evt);
            }
        });

        signUpButton.setText("Sign Up Player");
        signUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpButtonActionPerformed(evt);
            }
        });

        removeButton.setText("Remove Player");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        returnButton.setText("Return");
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        titleLabel.setText("Player Sign-Up");
        titleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(113, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(titleLabel)
                        .addGap(118, 118, 118))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(signUpButton)
                            .addComponent(displayButton)
                            .addComponent(removeButton)
                            .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(144, 144, 144))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(titleLabel)
                .addGap(37, 37, 37)
                .addComponent(displayButton)
                .addGap(18, 18, 18)
                .addComponent(signUpButton)
                .addGap(18, 18, 18)
                .addComponent(removeButton)
                .addGap(18, 18, 18)
                .addComponent(returnButton)
                .addContainerGap(81, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        PlayerIO.updateUsers(signUp.players); // update user list to player_log.txt
        JOptionPane.showMessageDialog(this, "Player list saved to player_log.txt", "Save", JOptionPane.INFORMATION_MESSAGE);
        CardLayout card = (CardLayout) this.getParent().getLayout();
        card.show(this.getParent(), "mainMenu"); // switch back to main menu
    }//GEN-LAST:event_returnButtonActionPerformed

    private void displayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayButtonActionPerformed
        JOptionPane.showMessageDialog(this, signUp.getPlayerList(), "Player List", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_displayButtonActionPerformed

    private void signUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpButtonActionPerformed
        while (true) { // repeat until a valid input is given, or is cancelled
            String input = JOptionPane.showInputDialog(this, "Enter name of new player:", "Sign-up", JOptionPane.QUESTION_MESSAGE); // show user text box for student to search
            if (input != null) { // if an input is entered
                if (!input.isBlank()) { // if name is valid
                    input = input.trim(); // remove whitespace
                    if (signUp.addNewPlayer(input)) { // attempt to add new player, if player does no exist
                        JOptionPane.showMessageDialog(this, input + " was successfully added", "Sign-up", JOptionPane.INFORMATION_MESSAGE); // show message with the student name and their mark
                    } else { // if player already exists
                        JOptionPane.showMessageDialog(this, input + " already exists", "Sign-up", JOptionPane.WARNING_MESSAGE); // show message with the student name and their mark
                    }
                    break;
                } else { // if name is blank
                    JOptionPane.showMessageDialog(this, "Please enter a valid name", "Sign-up", JOptionPane.WARNING_MESSAGE); // show message with the student name and their mark
                }
            } else { // if input is not entered
                break; // do nothing
            }
        }
    }//GEN-LAST:event_signUpButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
       Object input = JOptionPane.showInputDialog(this, "Choose Player you wish to remove:", "Remove", JOptionPane.QUESTION_MESSAGE, null, signUp.playerNames, signUp.playerNames[0]); // pop up menu to choose player
        if (input != null) { // if a player is chosen
            signUp.removePlayer(input.toString()); // remove selected player
            JOptionPane.showMessageDialog(this, input + " was removed", "Remove", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_removeButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton displayButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton returnButton;
    private javax.swing.JButton signUpButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
